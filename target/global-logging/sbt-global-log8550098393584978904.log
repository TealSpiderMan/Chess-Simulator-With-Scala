[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Alex\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Alex\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 65.9903ms
[debug]           Load.loadUnit: plugins took 43.306ms
[debug]           Load.loadUnit: defsScala took 0.1936ms
[debug] [Loading] Scanning directory C:\Users\Alex\IdeaProjects\ChessGame\project
[debug]             Load.loadUnit: mkEval took 5.563ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Alex\IdeaProjects\ChessGame\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.4923 ms
[info] loading settings for project chessgame-build from idea.sbt ...
[debug]               Load.resolveProject(chessgame-build) took 34.1084ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chessgame-build, base: C:\Users\Alex\IdeaProjects\ChessGame\project, plugins: List(<none>))) took 62.2909ms
[debug] [Loading] Done in C:\Users\Alex\IdeaProjects\ChessGame\project, returning: (chessgame-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 344.5717ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3217ms
[debug]         Load.loadUnit(file:/C:/Users/Alex/IdeaProjects/ChessGame/project/, ...) took 395.4801ms
[debug]       Load.apply: load took 457.4892ms
[debug]       Load.apply: resolveProjects took 2.7812ms
[debug]       Load.apply: finalTransforms took 29.7713ms
[debug]       Load.apply: config.delegates took 4.384ms
[debug]       Load.apply: Def.make(settings)... took 189.2976ms
[debug]       Load.apply: structureIndex took 50.8271ms
[debug]       Load.apply: mkStreams took 1.0385ms
[info] loading project definition from C:\Users\Alex\IdeaProjects\ChessGame\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1307.4981ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\Alex\IdeaProjects\ChessGame
[debug]       Load.loadUnit: mkEval took 0.1632ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8195 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 18.9077ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Alex\IdeaProjects\ChessGame, plugins: List(<none>))) took 21.7763ms
[debug] [Loading] Done in C:\Users\Alex\IdeaProjects\ChessGame, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 56.8341ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.9189ms
[debug]   Load.loadUnit(file:/C:/Users/Alex/IdeaProjects/ChessGame/, ...) took 1366.9918ms
[debug] Load.apply: load took 1377.4951ms
[debug] Load.apply: resolveProjects took 0.0916ms
[debug] Load.apply: finalTransforms took 18.3245ms
[debug] Load.apply: config.delegates took 0.2069ms
[debug] Load.apply: Def.make(settings)... took 57.1223ms
[debug] Load.apply: structureIndex took 12.4163ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to ChessGame (in build file:/C:/Users/Alex/IdeaProjects/ChessGame/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55418 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55418, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ChessGame (in build file:/C:/Users/Alex/IdeaProjects/ChessGame/)
[debug] > Exec(idea-shell, None, None)
